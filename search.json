[{"date":"2025-04-16T11:58:14.520Z","url":"/2025/04/16/24-8-22/","categories":[["undefined",""]],"content":"左捣鼓右捣鼓差点玩没自己的网站，还好救回来了（没备份的哀嚎~!）已经长记性了(疯狂备份😀)"},{"title":"Git | 基础入门知识","date":"2025-03-18T01:29:38.000Z","url":"/2025/03/18/25-4-28/","tags":[["教程","/tags/%E6%95%99%E7%A8%8B/"]],"categories":[["undefined",""]],"content":"如果你是一个开发人员，想用上这个世界上目前最先进的分布式版本控制系统，就开始学习吧。 什么是Git?Git是一个开源的分布式版本控制系统，它能够高效地处理从小到大的项目，Git是一个工具，Github、Gitee等等都是基于git代码。 下载使用GitGit - Downloads直接点击download for Windows下载完成具体安装方式可参考文章Git 详细安装教程 配置随便新建一个文件夹，右键选择”Open Git Bash Here”(Win11可能需要点击查看更多才能见到这个选项)会出现这样的窗口 这个命令框里面自带$所以不需要输入$，复制粘贴的时候记得把多余符号去除 输入 创建版本仓库 把这个文件夹变成可以用git来管理的仓库 git aadd添加首先创建一个简单的文本文件readme.txt 如果没用任何提示，那就是成功了，下面输入这个 然后命令窗口就会有消息提醒了，成功后 关联远程仓库先在代码托管平台（如 GitHub）创建远程仓库，获取其 URL（如 用户名/仓库名.git），添加远程仓库并推送： 分支管理如果需要开发新功能&#x2F;修复，可以创建新分支 "},{"title":"一些学习情况","date":"2025-02-10T00:31:36.000Z","url":"/2025/02/10/25-1-2/","categories":[["琐事杂谈","/categories/%E7%90%90%E4%BA%8B%E6%9D%82%E8%B0%88/"]],"content":"前段时间学习了Laravel8，链接数据库自己做了一个学生管理系统；写了一个前后分离php数据库的项目；学会使用jwt和i18n，Vue3完成了一个点外卖和音乐网站(下面有大致展示)，最近拿原生代码写了一个完整的海鲜售卖网站；做了并学习了一下蓝桥杯省赛真题(Web应用开发)，然后现在在做新比赛的题，虽然没参加，不过做下题目学习一下也是一种乐趣 之前完成的几个项目包括有：外卖平台，其中包含了添加购物车，下单，修改地址和登录登出操作。 以及音乐网站包括了有：搜索、播放以及一个简单的登录功能，该项目由Vue3+NodeJS完成。 "},{"title":"HEXO教程 | 给自己的网页添加域名 | 进阶","date":"2025-01-17T11:49:44.000Z","url":"/2025/01/17/hexo2/","tags":[["教程","/tags/%E6%95%99%E7%A8%8B/"]],"categories":[["undefined",""]],"content":"PS:注意，阿里云的域名注册和DNS服务是收费的，具体费用根据域名类型和注册时间而有所不同，但GitHub Pages的服务是免费的，当然国内也有概率无法连上github导致无法打开网页，所以就出了这么个教程 准备好域名准备好域名，就可以开始绑定属于自己的域名我的测试域名为 Schoar.cloud，注册在阿里云所以就以阿里云 DNS解析 进行演示 配置域名1.DNS中修改CNAME记录进入阿里云域名控制台 打开域名列表，我们要在 DNS配置中设置一个 CNAME 记录，将自定义域名指向 lzy134lzy.github.io（你的用户名.github.io）点击解析，会跳转至云解析DNS，点击添加记录，类型选择CNAME，主机记录写www，记录值就是 你的用户名.github.io 其余不要改变。 2.在hexo中添加CNAME完成第一步记录解析后，我们需要在本地 HEXO 中的 source 文件夹(不可变的位置)下创建一个 CNAME 文件 将配置的域名写进去 就这么简单，写完之后保存关闭。 3.修改_config.yml文件打开文件，找到url值，填入我们配置的域名： 设置好域名进入自己的仓库，点击 settings 进入page页面，找到”Custom domain”区块，把自己配置的域名填进去(默认红色方框起来的地方是空的) 完成之后点击save，之后会进入一小段时间DNS检查，检查通过后就可以正式的通过自己配置的域名访问hexo了。www.schoar.cloud通过域名访问成功 如果我将来有打算换域名?和以上方法差不多，需要在GitHub的Pages设置中更新配置的域名，本地CNAME配置，并在阿里云中添加新的CNAME记录，同时删除旧的记录即可完成更换。"},{"title":"HEXO教程 | 创建并上传Github部署静态网页","date":"2025-01-16T07:09:50.000Z","url":"/2025/01/16/hexo1/","tags":[["教程","/tags/%E6%95%99%E7%A8%8B/"]],"categories":[["undefined",""]],"content":"准备访问Github可能需要VPN加速，否则可能无法进入（视网络情况而定）文章代码中的$在命令窗口中自带，复制的时候记得删掉 1.本地环境你需要在电脑上安装：nodejs（&gt;16 版本）：Node.js — Run JavaScript Everywheregit（2.44.0）：Git – Downloads安装的时候无脑下一步即可。安装完毕以后，可以在 cmd 里面通过：node -v、npm -v 和 git –version 查看安装的版本。正常情况应该有如下输出： 2.注册一个github在Github注册一个账号（要有邮箱）按照步骤一路下去即可，一定要设置好密码，选择free账号。这里不过多赘述，因为确实是不麻烦，注意！进入Github有可能需要用到VPN加速，有的时候进入不需要，但访问速度也很慢！ 链接Github在某一个盘里面创建一个文件夹，名字随便写，记得住就好，然后右键点击Open Git Bash Here 会弹出一个命令行界面，我们在里面输入: 1.创建SSH密钥命令行输入： 然后一路按回车就行。然后我们进入 C:\\Users\\ 用户名 .ssh 目录（可能会隐藏，需要显示隐藏项目） 用记事本打开 id_rsa.pub 并复制里面的内容 2.Github添加密钥进入Github，点击右上角头像，弹出下拉框，点击”Settings”,进入设置点击”SSH and GPG Keys”，再点击”New SHH Key”，打开后Title写自己的Github名字，然后把 id_rsa.pub 里面的内容到复制到 Key 中，点击 “Add SSH key”就可以了 3.验证连接是否成功在Git bash here命令行输入 出现 “Are you sure……”，输入 yes 回车确认后面会出现”Hi xxxxx! You’re successfully authenticated……”即表示成功 4.创建仓库打开 GitHub 的主页点击头像 进入”Your Repositories” 中点击右上角的 New填写好基本信息Repository name 自己的用户名.github.io，一定要是这个名字！Description(optional)写”xxxx的HEXO博客”勾选 Add a README file填好后点击 Create repository 创建仓库.过一小会访问 https:&#x2F;&#x2F;用户名.github.io（而我的就是 lzy134lzy.github.io）可以看到默认界面 本地安装HEXO在已经创建好的文件夹内，再次点击 Open Git Bash Here打开命令行，然后使用 npm 安装 Hexo。在命令行中输入 于网络问题，安装时间可能会有点久。这段时间里面界面不会有任何反应，请耐心等待，安装完成后会提示的若安装成功，可通过 查看，只有成功了才能查看到 1.初始化HEXO在创建好的 hexo 文件夹内，打开bash命令行输入： 可能网络问题，初始化的时间可能会有点久，耐心等待即可。当出现“INFO Start blogging with Hexo!”提示的时候，说明已经完成了初始化完毕以后，我们可以在 hexo 程序文件夹中看到 hexo的东西。 2.预览方式在bash命令行输入： 稍等一会成功之后在输入 如果有提示是否允许专用网络，直接允许就可以。然后我们访问  就可以访问 hexo博客了 PS:如果 4000 端口被占用了（可能），可以运行 hexo server -p 6440 更改端口号为 6440（或者是其他端口）后重试 3.上传hexo到GitHub中我们需要先安装 hexo-deployer-git 然后在hexo目录中，修改_config.yml 文件末尾的 Deployment 部分 修改自己的用户名和分支： 说到底其实还是通过 SSH 方式进行连接，SSH地址可以 直接在你的仓库 “&lt;&gt;Code” 里面看到:点击后选择Local-&gt;SSH就可以看到一串地址。修改完成之后保存，再打开bash命令行，输入 后面如果出现了提示：“INFO Deploy done: git”(这是最后一段话)说明网站已经成功上传GitHub了，然后我们只需要在库设置”Default branch”中将分支设置为”gh-pages”(此分支是上面的branch: gh-pages设置的)，若不存在就添加一个新的。然后进入pages页面，将”Build and deployment”的branch切换至gh-pages，点击save。稍等片刻我们访问用户名.github.io（比如我是 lzy134lzy.github.io）就可以看到默认 hexo 了 "},{"title":"2024年终总结","date":"2024-12-30T00:31:36.000Z","url":"/2024/12/30/24-12-30/","tags":[["年总结","/tags/%E5%B9%B4%E6%80%BB%E7%BB%93/"]],"categories":[["琐事杂谈","/categories/%E7%90%90%E4%BA%8B%E6%9D%82%E8%B0%88/"]],"content":"第一回写一整年的总结，想了想来点记忆深刻的吧，虽然有点不知道从何讲起。 一些事记删除了早期的大部分文章开始重新编写，学习了很多的新知识，包括自己写了一个api，每日24小时随机刷新一个图片；我提前几个月开始训练准备比赛，长久的枯燥乏味让我觉得没有任何意义，不过因为某些原因最后也没有去参加，我准备去制作一个自己的vue3博客，目前还在开发，学习新知识提升自己的技术，为即将出去找工作做准备，也许这个社会付出并没有回报，但是人总归是要往前看的。 音乐找到了几首比较喜欢的分享一下I Really Want to Stay at Your House-Cyberpunk我的世界一直下雨-罗言Letgo Eason-Vnriet 硬件换了个手机保护壳，没抓住掉下去没想到还是摔坏了，换了新手机，电脑性能不够也换了，并且换了新的设备，但是运气不太好第一次出问题了，后面换了没事了捣鼓电脑成功组装一台电脑，顺带修键盘把失灵的按键全部救了回来 其他闲暇时间考了个c1驾照，不过不太愿意开车，路上其他车挺危险的，很多次都因为他人的不注意差点有事，真没兴趣了；说起来有的时候吧，运气也是挺让人难绷的，100次，50概率我能86次不中(噗呲)，挺有意思了买了个烤箱，学会了一些较简单的烹饪食品 总结 其实今年过的有点浑浑噩噩的了，在之前对我来说小事且不值得懊恼的事情，却让我有点难受；为什么现在是白天，却还是看不清前行的路？虽然今年还是有很多好事的，但我懒得细说了，就这样吧 新的一年开端没有一个好的开头，先是国际局势动荡不安，再是社会中人对一些东西的不满表现越来越明显；现在出去找工作恐怕是很难，与其说希望新的一年越来越好，不如希望自己新的一年有信心为自己的生活而努力了。"},{"title":"AMD | fTPM 性能问题原因和解决","date":"2024-04-26T15:04:57.000Z","url":"/2024/04/26/24-04-26/","categories":[["undefined",""]],"content":"该问题在最新版本已经解决，该文章可能不适用最新版 前言AMD的fTPM（Firmware-based Trusted Platform Module，基于固件的可信平台模块）是一种集成在AMD处理器中的安全功能，用于替代传统的物理TPM芯片，它主要用于增强系统安全性，支持BitLocker加密、Windows 11的TPM 2.0要求，以及防止恶意软件篡改系统固件。与物理TPM（dTPM）相比，fTPM依赖CPU资源，可能在某些情况下影响性能。 主题部分AMD用户报告启用fTPM后出现系统卡顿、音频故障，尤其在win10&#x2F;11中极其常见（本人就碰见过爆音和严重降频问题）。 为什么fTPM会导致系统出现BUG?1.fTPM 将密钥存储在主板上的 SPI 闪存（BIOS 芯片） 中，而非独立的 NVRAM（如硬件 TPM 模块）当系统安全模块（如 Windows 安全子系统或 Linux 的 hwrng）与 fTPM 通信时，会触发 SPI 闪存的扩展内存事务，导致其他硬件（如 CPU、内存）必须等待 SPI 事务完成才能继续运行，从而造成短暂卡顿。2.fTPM依赖内存事务（Memory Transaction）来同步数据访问，但由于其实现方式，可能导致系统其他部分（如 CPU、GPU）被迫等待，从而降低整体响应速度 解决方式在此之前先检查电脑是否启用了BitLocker；首先打开控制面板，选择 BitLocker 驱动器加密 ，在管理界面中选择要解密的磁盘，选择 关闭 BitLocker 等待完成数据解密。如果你在解锁 BitLocker 以前关闭了 TPM，会导致所有的数据不可逆转地丢失。之后使用 Win+R 打开运行，输入 tpm.msc 打开 TPM 管理，在窗格中选择 关闭 TPM 以显示关闭 TPM 安全硬件页面，在 关闭 TPM 安全硬件 对话框中选择一种方法以输入所有者密码并关闭TPM最后重启并进入到 BIOS 设置，选择 Advanced (不同电脑可能位置不一样)，找到 AMD fTPM Switch 选项，选择 Disable 完成关闭即可。 还有一种方法就是AMD最新版本似乎已经解决了这个问题，可以去查看安装新版本。"},{"title":"Hello World","date":"2024-04-12T12:14:23.000Z","url":"/2024/04/12/hello-world/","categories":[["测试","/categories/%E6%B5%8B%E8%AF%95/"]],"content":"这是我第一次进入到这个环境！"}]